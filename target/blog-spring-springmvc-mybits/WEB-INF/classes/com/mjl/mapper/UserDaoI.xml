<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.mjl.dao.UserDaoI">
    <!--User结果集-->
    <resultMap id="userMap" type="User">
      <id property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="passWord" column="password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userSex" column="user_sex"/>
        <result property="createTime" column="create_time"/>
        <result property="userType" column="user_type"/>
        <result property="userState" column="user_state"/>
        <result property="credit" column="credit"/>
        <result property="lastLoginTime" column="last_logintime"/>
        <result property="lastIp" column="last_ip"/>
    </resultMap>

    <!--<resultMap id="userBoardMap" type="User" extends="userMap">-->
        <!--<collection property="board" ofType="Board">-->
            <!--<id property="boardId" column="board_id"/>-->
            <!--<result property="boardName" column="board_name"/>-->
            <!--<result property="boardDesc" column="board_desc"/>-->
            <!--<result property="topicNum" column="board_num"/>-->
        <!--</collection>-->
    <!--</resultMap>-->

    <sql id="user_columns">
        user_id,user_name,user_email,user_sex,create_time,user_type,user_state,credit,last_logintime,last_ip
    </sql>


    <!--通过用户名查找用户-->
    <select id="findUserByUserName" parameterType="string" resultMap="userMap">
        SELECT
         <include refid="user_columns"/>
         FROM t_user WHERE user_name=#{username}
    </select>
    <!--通过用户ID查找用户-->
    <select id="findUserByUserId" parameterType="int" resultType="com.mjl.model.PO.User">
        SELECT * FROM t_user WHERE user_id=#{userId}
    </select>

    <!--插入用户信息-->
    <insert id="addUser" parameterType="User" keyProperty="userId" useGeneratedKeys="true">
        INSERT  INTO t_user(user_name,password,user_email,user_sex,create_time)
        VALUES (#{userName},${passWord},#{userEmail},#{userSex},#{createTime})
    </insert>

    <delete id="deleteUserByUserName" parameterType="string">
        DELETE FROM t_user WHERE user_name = #{userName}
    </delete>


</mapper>